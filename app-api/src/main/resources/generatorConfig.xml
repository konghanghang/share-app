<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

    <!--导入属性配置-->
    <!--<properties resource="application.properties"></properties>-->

    <!-- 数据库驱动-->
    <context id="MysqlTables" targetRuntime="MyBatis3">
        <property name="autoDelimitKeywords" value="true"/>
        <!-- 生成的 Java 文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 格式化 Java 代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化 XML 代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <!-- 抑制警告 -->
        <property name="suppressTypeWarnings" value="true" />
        <!--避免生成重复代码的插件-->
        <!--<plugin type="com.ysla.m.plugin.OverIsMergeablePlugin"/>-->
        <!-- generate entity时，生成hashcode和equals方法 -->
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin" />
        <!-- generate entity时，生成serialVersionUID -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <!-- 这个插件只会增加字符串字段映射到一个JDBC字符的方法 -->
        <plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin" />
        <!-- generate entity时,生成toString -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />

        <commentGenerator type="com.ysla.api.utils.mybatis.MySqlCommentGenerator">
            <!--<property name="suppressDate" value="true"/>-->
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
            <!-- 根据数据库字段注释生成java文件注释 -->
            <!--<property name="addRemarkComments" value="true"/>-->
            <property name="author" value="konghang"/>
            <property name="dateFormat" value="yyyy/MM/dd"/>
        </commentGenerator>
        <!--数据库链接URL，用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/test?useSSL=false&amp;characterEncoding=utf-8"
                        userId="root" password="2222">
            <!-- 针对oracle数据库 -->
            <property name="remarksReporting" value="true"></property>
            <!-- 针对mysql数据库 -->
            <property name="useInformationSchema" value="true"></property>
        </jdbcConnection>
        <!-- java类型处理器
        用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；
        注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型；-->
        <javaTypeResolver type="org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl">
            <!--
                true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型
                false：默认,
                    scale>0;length>18：使用BigDecimal;
                    scale=0;length[10,18]：使用Long；
                    scale=0;length[5,9]：使用Integer；
                    scale=0;length<5：使用Short；
             -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- 生成模型的包名和位置(实体类)-->
        <javaModelGenerator targetPackage="com.ysla.api.auto.model" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!-- 生成映射文件的包名和位置-->
        <sqlMapGenerator targetPackage="com.ysla.api.auto.mapper" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!--生成xml映射文件存放位置-->
        <!--<sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>-->
        <!-- 生成DAO的包名和位置  type="ANNOTATEDMAPPER" type="XMLMAPPER" -->
        <javaClientGenerator type="ANNOTATEDMAPPER"
                             targetPackage="com.ysla.api.auto.mapper"
                             targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
        <!--
        如果要直接指定全部表，可以用
        <table tableName="%"></table>
        的方式，会默认将数据表中的"_"去掉并以驼峰的形式生成实体类名
         -->
        <!-- 有些表的字段需要指定java类型
         <table schema="" tableName="">
            <columnOverride column="" javaType="" />
        </table> -->
        <!--
        enableInsert：是否生成插入语句。默认是true
        enableSelectByPrimaryKey：是否通过主键生成选择语句。不管是否有这种设置,如果该表没有一个主键将不会生成。
        enableUpdateByPrimaryKey：是否通过主键生成更新语句。如果该表没有主键，不管是否设置该属性,语句将不会生成。
        enableDeleteByPrimaryKey：是否通过主键生成删除语句。如果该表没有主键，不管这种设置该属性,语句将不会生成。
        enableDeleteByExample：是否通过example对象生成删除语句。这个声明使得许多不同的动态删除在运行时生成。
        enableCountByExample：是否通过example对象生成计算行数语句。该语句将返回一个表中的行数相匹配的example。
        enableUpdateByExample：是否通过example对象生成更新语句。该语句将更新一个表中相匹配的记录。
        selectByPrimaryKeyQueryId：这个值将被添加到选择列表中选择通过主键的声明在本表格:“' <值>作为QUERYID”。这可以用于识别查询在DBA在运行时跟踪工具。如果你需使用,你应该指定一个唯一的id为每个不同的查询生成MBG。
        selectByExampleQueryId：这个值将被添加到选择列表中选择通过例子的声明在本表格:“' <值>作为QUERYID”。这可以用于识别查询在DBA在运行时跟踪工具。如果你需使用,你应该指定一个唯一的id为每个不同的查询生成MBG。
        enableSelectByExample:是否应该生成通过example的选择语句。这个声明使得许多不同的动态查询是在运行时生成。
        modelType：此属性用于覆盖默认的模型类型,如果你想对这张表这么做。如果未指定,MBG将生成的域对象基于上下文默认的模型类型。
        该模型类型定义了如何将生成MBG域类。
        一些模型类型MBG将生成一个单一的域类为每个表,和其他可能产生不同的类MBG取决于表的结构。
        escapeWildcards：排除通配符。这意味着无论SQL通配符(' _ '和' % ')的模式和表名都应该避免在搜寻列。
        这是一些驱动要求如果模式或表包含一个SQL通配符(例如,如果一个表的名字是MY_TABLE,一些驱动要求的下划线字符进行转义)。
        -->
        <!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名 mapperName是mapper类的名称 -->
        <table tableName="t_user" domainObjectName="User"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="user_id" sqlStatement="MySql" identity="true"/>
        </table>
        <table tableName="t_article" domainObjectName="Article"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="article_id" sqlStatement="MySql" identity="true"/>
            <columnOverride column="mdContent" javaType="java.lang.String" jdbcType="VARCHAR" />
            <columnOverride column="content" javaType="java.lang.String" jdbcType="VARCHAR" />
        </table>
        <table tableName="t_article_comment" domainObjectName="ArticleComment"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="comment_id" sqlStatement="MySql" identity="true"/>
        </table>
        <table tableName="t_user_collect" domainObjectName="UserCollect"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="collect_id" sqlStatement="MySql" identity="true"/>
        </table>
        <table tableName="wx_mp" domainObjectName="WxMp"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="mp_id" sqlStatement="MySql" identity="true"/>
        </table>
        <table tableName="wx_user" domainObjectName="WxUser"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="user_id" sqlStatement="MySql" identity="true"/>
        </table>
        <table tableName="s_ip_info" domainObjectName="IpInfo"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="ip" sqlStatement="MySql" identity="true"/>
        </table>

        <!-- m开头的表自用 -->
        <table tableName="m_menses" domainObjectName="Menses"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="menses_id" sqlStatement="MySql" identity="true"/>
        </table>
        <table tableName="m_notice_template" domainObjectName="NoticeTemplate"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="notice_id" sqlStatement="MySql" identity="true"/>
        </table>
        <table tableName="m_wx_template" domainObjectName="WxTemplate"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="template_id" sqlStatement="MySql" identity="true"/>
        </table>
        <!-- m开头的表自用 -->
    </context>
</generatorConfiguration>